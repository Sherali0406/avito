generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id         Int        @id @default(autoincrement())
  name       String
  main_photo String
  parentId   Int?       @default(0)
  parent     Category?  @relation("ChildCategories", fields: [parentId], references: [id])
  children   Category[] @relation("ChildCategories")
  posts      Post[]
}

model Region {
  id       Int      @id @default(autoincrement())
  address  String
  parentId Int?     @default(0)
  posts    Post[]
  parent   Region?  @relation("ChildRegions", fields: [parentId], references: [id])
  children Region[] @relation("ChildRegions")
}

model Post {
  id                 Int             @id @default(autoincrement())
  favorite           Boolean
  description        String
  user_id            Int
  subtitle           String
  title              String
  main_photo         String
  photos             String[]
  region_id          Int             @default(0)
  category_id        Int             @default(0)
  address            String
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt
  rating             Int
  review             String
  viewsCount         Int             @default(0)
  characteristics_id Int
  price              Int
  categories         Category        @relation(fields: [category_id], references: [id])
  characteristics    Characteristics @relation(fields: [characteristics_id], references: [id])
  regions            Region          @relation(fields: [region_id], references: [id])
  author             User            @relation(fields: [user_id], references: [id])
  postViews          PostView[]
}

model Characteristics {
  id           Int    @id @default(autoincrement())
  status       String
  manufacturer String
  model        String
  color        String
  created_year Int
  posts        Post[]
}

model User {
  id         Int        @id @default(autoincrement())
  first_name String?
  last_name  String?
  phone      String
  password   String
  token      String?
  role       String
  address    String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  posts      Post[]
  postViews  PostView[]
}

model PostView {
  postId Int
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([postId, userId])
  @@index([userId])
}
